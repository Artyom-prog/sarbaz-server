from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy
from datetime import datetime
import os
from pathlib import Path

app = Flask(__name__)

# üîê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
app.config['SQLALCHEMY_DATABASE_URI'] = os.environ.get('DATABASE_URL')
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db = SQLAlchemy(app)

# üîß –ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    phone = db.Column(db.String(20), nullable=False)
    time = db.Column(db.String(30), nullable=False)

# ‚úÖ –†—É—á–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü –≤ Render
@app.route('/init_db')
def init_db():
    with app.app_context():
        db.create_all()
    return '‚úÖ –¢–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã'

@app.route('/register', methods=['POST'])
def register():
    data = request.get_json()
    name = data.get('name')
    phone = data.get('phone')
    time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    user = User(name=name, phone=phone, time=time)
    db.session.add(user)
    db.session.commit()

    # üîΩ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ txt –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ (–µ—Å–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ)
    try:
        desktop = Path.home() / "Desktop"
        log_file = desktop / "sarbaz_registrations.txt"
        with open(log_file, "a", encoding="utf-8") as f:
            f.write(f"{time} | {name} | {phone}\n")
    except Exception as e:
        print("‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –≤ —Ñ–∞–π–ª:", e)

    print(f"[{time}] {name} - {phone}")
    return jsonify({'status': 'ok'}), 200

@app.route('/users', methods=['GET'])
def get_users():
    users = User.query.all()
    result = [{'name': u.name, 'phone': u.phone, 'time': u.time} for u in users]
    return jsonify(result)

if __name__ == '__main__':
    app.run()
